! WARNING
! This file contains a regexp list of trigger words and phrases that an individual might find offensive.
! It is used to prevent web pages that contain these words and phases being shown to people
! who might be offended.
! It is not intended to upset anyone.  Exercise caution when reading.
!
!
! Format:
! A comma separated list.
! Lines starting with a ! are comments and are ignored
! (e.g. redundant triggers that you don't want to lose).
! Blank lines are ignored.
! There are three types of data lines:
!     1. Version:
!         A line with 'Version' as the first field is assumed to have some sort of arbitary
!         version number or phrase as the second field that you can use to check the correct
!         version of the trigger file has been loaded.
!     2. Trigger definition:
!         Fields are assumed to be in the order: 
!             trigger regexp, modifier, your reference (optional), your comment (optional)
!         Anything after the first 3 fields is ignored.
!         regexp is a regular expression, and modifier is a character that alters how the
!         regexp behaves, See: https://www.w3schools.com/js/js_regexp.asp
!         'your reference' is your own unique arbitary reference that allows the trigger to be refered
!         to to a third party without revealing the trigger itself.
!     3. Test definition:
!          A line with 'Test' as the first field is assumed to have a test to ensure the definition and 
!          operation of a regexp has been understood.  Fields are assumed to be in the order:
!              Test, string, result, your comment (optional)
!         Anything after the first 3 fields is ignored.
!         string is any word/phrase you want to use the test the regexp.
!         result is one of 'match' or 'fail', 'match' indicates that you expect the trigger to be found in 
!         the string.
!         When the regexps are loaded into the browser extension, they will be matched against the
!         strings and if the result is not as expected a warning will be raised.
!         A test of a regexp must come immediately after the line that defines the regexp. 
!         Not all regexps are expected to have a test, the test facility is there to check the more complex
!         ones.
!         A regexp can have multiple tests.


! ASCII values (info only)
! \057 	/ 	Solidus/Slash
! \134 	\ 	Reverse solidus/Backslash

Version,0.2

!/\b1984\b,,'540',  too many false positives with this

Afghanistan,i,'550',
test,afghanistan,match
!test,wrong afghanistan,fail, deliberately set wrong result
test,afghanista,fail

Animal\s*farm,i,'560',
 test,animalfarm,match
TEST ,Animal     Farm,match
  test   ,Animal pig Farm,fail

anti-?theist,i,'563',
test,anti-theist,match
test,antitheist,match
!test,antitheist person,fail, deliberately set wrong result

! matching A.I. was a bit of a pain, because it is so small and could be in
! other acronyms I wanted it to be a whole word and expected \b at the
! begining and end of the regex to work ie \bA\.I\.\b
! This seemed the break down when A.I. was at the end of the string, so
! I went with:
\bA\.I\.(?=(\s.*|$)),,'565',
! i.e. After A.I. it can be followed by EITHER a whitespace char followed by zero or more other chars, OR the end of string.
test,A.I.,match
test,xA.I.,fail
test,x A.I.,match
test,A.I.y,fail
test,A.I. y,match
test,xA.I.y,fail
test,x A.I. y,match
!problem too short: \bAI\b/,,'1030',

activis[tm],i,'1040',
test,activist,match
test,activism,match

al[-\s]*Qaeda,i,'1050',
test,al-Qaeda,match
test,al - Qaeda,match
test,alQaeda,match
test,al Qaeda,match

alternative\s*medicine,i,'1060',
Anarchis[tm],i,'1070',

(animal|climate|extinction)\s*rebellion,i,'1080',
test,animal rebellion,match
test,climate rebellion,match
test,extinction rebellion,match

animal\s*rights,i,'1090',
!\barian\b,i,'1100',  // is arian really a problem?
artificial\s*intelligence,i,'1110',
axis\s*of\s*evil,i,'1120',
Betty\s*Campbell,i,'1130',
bin\s*laden,i,'1140',
black\s*(power|panther|lives),i,'1150',

black\s*face(?!.*sheep),i,'1155',  //unless followed by sheep
test,blackface,match
test, when I talk about blackface I mean sheep,fail

\bB[\s\.]*L[\s\.]*M\.(?=(\s.*|$)),,'1160',
test,B.L.M.,match
test,xB.L.M.,fail
test,x B.L.M.,match
test,B.L.M.y,fail
test,B.L.M. y,match
test,xB.L.M.y,fail
test,x B.L.M. y,match

blyton,i,'1170',
bombing,i,'1180',
Boogaloo,i,'1190',
British\s*empire,i,'1200',
buddis[tm],i,'1210',





